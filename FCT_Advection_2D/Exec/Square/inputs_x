max_step  = 108
stop_time = 4.0

#	COMPONENTS
# ncomp = 5
# domdir = 1	#	1: x, 2: y
max_rk = 1

# PROBLEM SIZE & GEOMETRY
geometry.is_periodic =  1  1  1
geometry.coord_sys   =  0       # 0 => cart
# Domain size (m)
geometry.prob_lo     =  -4.0  -4.0  1.0 
geometry.prob_hi     =  4.0  4.0  1.0
amr.n_cell           =  64  64   1

# VERBOSITY
amr.v              = 1       # verbosity in Amr
amr.n_error_buf	   = 8
amr.grid_eff	   = 0.7

# REFINEMENT
amr.max_level       = 1       # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.blocking_factor = 8       # block factor in grid generation
amr.max_grid_size   = 64

amr.regrid_int      = 1       # how often to regrid

# TIME STEP CONTROL
adv.cfl            = 0.4     # cfl number for hyperbolic system
                             # In this test problem, the velocity is
			     # time-dependent.  We could use 0.9 in
			     # the 3D test, but need to use 0.7 in 2D
			     # to satisfy CFL condition.

adv.do_reflux = 1

# Tagging
adv.tagfrac = 0.05 		#	must be < 1 

# PLOTFILES
amr.plot_file  = Outputs/plt    # root name of plot file
amr.plot_int   = 1    # number of timesteps between plot files

# CHECKPOINT
amr.chk_file = Outputs/chk      # root name of checkpoint file
amr.chk_int  = 100      # number of timesteps between checkpoint files
amr.restart  = Outputs/chk00100 # restart from this checkpoint file

# INITIAL CONDITIONS
# prob.p2p1   = 10.0
# prob.ro2ro1 = 1.0
# prob.v2v1   = 0.0

prob.p  	  = 1.0				#	Pressure in domain in Pa (N/m^2)
#	prob.u2 	  = 1.0				#	x-velocity in square (m/s)
prob.u 	  = 2.0				#	x-velocity outside square (m/s)
#	prob.v2 	  = 1.0				#	y-velocity in square (m/s)
prob.v 	  = 2.0				#	y-velocity outside square (m/s)
prob.ro2 	  = 1.0				#	density in square (kg/m^3)
prob.ro1 	  = 0.5				#	density outside square (kg/m^3)

# DEFINING SIZE OF SQUARE WAVE (CENTRED AT ORIGIN)
prob.xw		  = 1.0				#	How wide is the square wave in x-direction (m)
prob.yw		  = 1.0				#	How wide in y-direction (m)